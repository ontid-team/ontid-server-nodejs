components:
  parameters:
    IdParam:
      in: path
      name: id
      required: true
      schema:
        type: integer
        format: int64
        example: 10
      description: 'ID to return'

    LimitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        example: 10
      description: The numbers of items to return

    PageParam:
      in: query
      name: page
      required: false
      schema:
        type: integer
        example: 1
      description: The page number

    SortByIdParam:
      in: query
      name: order[id]
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      description: sort by id field

    SearchParam:
      in: query
      name: limit
      required: false
      schema:
        type: string
        example: Search
      description: The search

    SortByCreatedAtParam:
      in: query
      name: order[created_at]
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      description: sort by createdAt field

    IsActiveParam:
      in: query
      name: filter[is_active]
      required: false
      schema:
        type: boolean
        example: true
      description: Filter by isActive

    EndDateParam:
      in: query
      name: filter[end_date]
      required: false
      schema:
        type: string
        format: date
        example: '2021-06-10'
      description: Filter by endDate

  responses:
    IdResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: number
                example: 1

    HttpOk:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Ok
              status:
                type: number
                example: 200
              code:
                type: string
                example: OK

    HttpPasswordResetSuccessfully:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Password reset successfully
              status:
                type: number
                example: 200
              code:
                type: string
                example: PASSWORD_RESET_SUCCESSFULLY

    HttpPasswordResetSentEmail:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Password reset code sent to email
              status:
                type: number
                example: 200
              code:
                type: string
                example: PASSWORD_RESET_SENT_EMAIL

    HttpNoContent:
      description: No Content

    HttpBadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/InvalidCredentialsError'

    HttpUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/TokenNotProviderError'
              - $ref: '#/components/schemas/TokenExpiredError'
              - $ref: '#/components/schemas/TokenVerifyError'

    HttpForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Forbidden'

    HttpUnprocessableEntity:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Validation Failed
              status:
                type: number
                example: 422
              code:
                type: string
                example: UNPROCESSABLE_ENTITY

    HttpInternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/ExternalServiceError'
              - $ref: '#/components/schemas/ServerErrorOccurred'
              - $ref: '#/components/schemas/DBError'

  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TokenNotProviderError:
      type: object
      properties:
        message:
          type: string
          example: Token not provided
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_NOT_PROVIDED

    TokenExpiredError:
      type: object
      properties:
        message:
          type: string
          example: Token expired
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_EXPIRED

    TokenVerifyError:
      type: object
      properties:
        message:
          type: string
          example: Token verify error
        status:
          type: number
          example: 401
        code:
          type: string
          example: TOKEN_VERIFY

    Forbidden:
      type: object
      properties:
        message:
          type: string
          example: Forbidden
        status:
          type: number
          example: 403
        code:
          type: string
          example: FORBIDDEN

    InvalidCredentialsError:
      type: object
      properties:
        message:
          type: string
          example: Invalid credentials
        status:
          type: number
          example: 400
        code:
          type: string
          example: INVALID_CREDENTIALS

    ExternalServiceError:
      type: object
      properties:
        message:
          type: string
          example: External service error
        status:
          type: number
          example: 500
        code:
          type: string
          example: EXTERNAL

    ServerErrorOccurred:
      type: object
      properties:
        message:
          type: string
          example: Server error occurred
        status:
          type: number
          example: 500
        code:
          type: string
          example: SERVER_ERROR

    DBError:
      type: object
      properties:
        message:
          type: string
          example: DB error
        status:
          type: number
          example: 500
        code:
          type: string
          example: DB_ERROR

    Meta:
      type: object
      properties:
        limit:
          type: number
          format: int64
          example: 20
        currentPage:
          type: number
          format: int64
          example: 1
        hasNextPage:
          type: boolean
          example: true
        hasPrevPage:
          type: boolean
          example: false
        nextPage:
          type: number
          format: int64
          example: 2
        prevPage:
          type: number
          format: int64
          example: 1
        totalPages:
          type: number
          format: int64
          example: 10
        totalItems:
          type: number
          format: int64
          example: 200

    Token:
      type: object
      properties:
        tokenType:
          type: string
          example: Bearer
        accessToken:
          type: string
          example: '******'
        refreshToken:
          type: string
          example: '******'
